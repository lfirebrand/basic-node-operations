1. What is the difference between readdirSync and readdir?

readdirSync is synchronous and blocking and readdir is asynchronous and non-blocking.

2. What is the event loop and how does it handle asynchronous requests?

The event loop is what enables callback functions to occur. Node processes events sequentially via the node queue. In the case of anonymous requests, Node asks the operating system to notify it when the event is ready for processing. Meanwhile, it continues to process other tasks.

3. Given the following code, specify whether the program is asynchronous and non-blocking or synchronous and blocking or synchronous and non-blocking.

Synchronous and blocking

4. Given the following code, specify whether the program is asynchronous and non-blocking or synchronous and blocking or synchronous and non-blocking.

Asynchronous and non-blocking

5. In what order will the console.log statements execute in the code below?
console.log(“C”)
console.log(“A”)
console.log(“B”)

6. setTimeout is a JavaScript function which calls a function after a set amount of milliseconds. Given the following code, explain in what sequence the functions will run and why.

hello() will run first, followed by greeting(). Though Javascript is largely synchronous, setTimeout is asynchronous because it is invoking a 100ms time out before the code will execute. Because of the enforced time out, hello() will run first.

7. Create a function which utilizes a callback. Make sure to add console.log statements to understand when your callback function is called.

const fs = require('fs');

fs.readFile('bloc.txt', (err, data) => {
 if (err) throw err;
 console.log("I'm going first");
 console.log("I'm going second");
});
